package main.br.com.joyC.gaals;

public interface ParserConstants
{
    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL    = 43;
    int FIRST_SEMANTIC_ACTION = 92;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1,  0, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6, -1, -1, -1, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8,  8,  8,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 12, 13, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 15, -1, -1, -1, 15, -1, -1, 15, 15, -1, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, 18, 18, 18, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 22, 22, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 24, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, 27, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 32, -1, -1, -1, 32, -1, -1, 32, 32, -1, 32, 32, 32, 32, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 34, -1, -1, -1, 34, -1, -1, 34, 34, -1, 34, 34, 34, 34, 34, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 36, -1, -1, -1, 37, -1, -1, 39, 38, -1, 35, 35, 35, 35, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, 40, 40, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 41, 41, 41, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 43, 43, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 44, -1, 44, 44, -1, 44, 44, 44, 44, 44, -1, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, 46, 46, -1, 46, 46, 47, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46 },
        { -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, 49, 49, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, 55, 55, 55, 55, 55, 55, 55, 55, 55, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, 55, 55, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 62, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 64, 64, 64, 64, 64, 64, 64, 64, 64, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, 64, 64, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, -1, 65, 65, -1, 65, -1, -1, 66, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1, 70, 68, 68, 68, 68, 68, 68, 68, 68, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, 68, 68, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72, 72, 72, 72, 72, 72, 72, 72, -1, -1, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72, 72, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 74, -1, 74, 74, -1, 74, -1, -1, 74, 74, -1, 73, 73, 73, 73, 73, 73, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 81, 81, 81, 81, 81, 81, 81, -1, -1, 81, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 81, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, 82, 82, -1, 82, -1, -1, 82, 82, -1, 82, 82, 82, 82, 82, 82, 83, 84, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 85, 85, 85, 85, 85, 85, 85, 85, -1, -1, 85, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 85, 85, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 86, -1, 86, 86, -1, 86, -1, -1, 86, 86, -1, 86, 86, 86, 86, 86, 86, 86, 86, 88, 87 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 89, 89, 89, 89, 89, 90, 91, 92, -1, -1, 93, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 94, 95, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 44,  6, 21, 52, 61, 22 },
        {  0 },
        { 45 },
        {  9, 21, 46, 22, 25 },
        { 48, 47 },
        {  0 },
        { 48, 47 },
        { 17, 26, 21, 49, 22 },
        { 51, 50 },
        {  0 },
        { 27, 51, 50 },
        { 13 },
        { 14 },
        { 15 },
        { 16 },
        {  0 },
        { 53 },
        { 26, 54, 25 },
        { 56, 55 },
        { 59, 55 },
        {  0 },
        { 27, 54 },
        { 57, 58 },
        { 13 },
        { 14 },
        { 15 },
        { 16 },
        {  0 },
        { 21, 18, 22 },
        { 17, 21, 60, 22 },
        { 17 },
        { 18, 27, 17 },
        { 63, 25, 62 },
        {  0 },
        { 63, 25, 62 },
        { 64 },
        { 69 },
        { 74 },
        { 77 },
        { 80 },
        { 66, 28, 81 },
        { 57 },
        { 17 },
        { 65, 67, 68 },
        {  0 },
        { 21, 81, 22 },
        {  0 },
        { 29, 51 },
        {  3, 23, 70, 24 },
        { 66, 71 },
        {  0 },
        { 27, 66, 71 },
        {  5, 21, 61, 22 },
        {  4, 21, 61, 22 },
        {  7, 23, 75, 24 },
        { 81, 76 },
        {  0 },
        { 27, 81, 76 },
        { 11, 23, 81, 24, 72, 78 },
        {  0 },
        { 73 },
        { 72 },
        { 73 },
        { 10, 23, 81, 24, 79 },
        { 83, 82 },
        {  0 },
        { 30, 83, 82 },
        { 31, 83, 82 },
        { 84 },
        {  8 },
        { 12 },
        { 32, 83 },
        { 87, 85 },
        { 86, 87 },
        {  0 },
        { 33 },
        { 34 },
        { 35 },
        { 36 },
        { 37 },
        { 38 },
        { 89, 88 },
        {  0 },
        { 39, 89, 88 },
        { 40, 89, 88 },
        { 91, 90 },
        {  0 },
        { 42, 91, 90 },
        { 41, 91, 90 },
        { 66 },
        { 18 },
        { 19 },
        { 20 },
        { 23, 81, 24 },
        { 39, 91 },
        { 40, 91 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado palavraReservada",
        "Era esperado input",
        "Era esperado isFalseDo",
        "Era esperado isTrueDo",
        "Era esperado main",
        "Era esperado output",
        "Era esperado true",
        "Era esperado types",
        "Era esperado while",
        "Era esperado if",
        "Era esperado false",
        "Era esperado idInt",
        "Era esperado idFloat",
        "Era esperado idString",
        "Era esperado idBool",
        "Era esperado idComposto",
        "Era esperado int",
        "Era esperado float",
        "Era esperado string",
        "Era esperado \"[\"",
        "Era esperado \"]\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \";\"",
        "Era esperado \":\"",
        "Era esperado \",\"",
        "Era esperado \"=\"",
        "Era esperado \".\"",
        "Era esperado \"&&\"",
        "Era esperado \"||\"",
        "Era esperado \"!\"",
        "Era esperado \"==\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \"<=\"",
        "Era esperado \">\"",
        "Era esperado \">=\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"/\"",
        "Era esperado \"*\"",
        "<lang> inválido",
        "<opt_tipos> inválido",
        "<tipos> inválido",
        "<types_dec> inválido",
        "<types_dec1> inválido",
        "<type_dec> inválido",
        "<lista_de_campos> inválido",
        "<lista_de_campos1> inválido",
        "<campo> inválido",
        "<opt_var_decs> inválido",
        "<variaveis> inválido",
        "<variavel_dec> inválido",
        "<variavel_dec1> inválido",
        "<id_do_tipo_simples> inválido",
        "<var_type> inválido",
        "<opt_arr_size> inválido",
        "<id_do_tipo_composto> inválido",
        "<arr_types> inválido",
        "<lista_de_comandos> inválido",
        "<lista_de_comandos1> inválido",
        "<comando> inválido",
        "<atribuicao> inválido",
        "<identificador> inválido",
        "<variavel_uso> inválido",
        "<opt_expr> inválido",
        "<opt_field> inválido",
        "<entrada_de_dados> inválido",
        "<lista_de_identificadores> inválido",
        "<lista_de_identificadores1> inválido",
        "<true_statement> inválido",
        "<false_statement> inválido",
        "<saida_de_dados> inválido",
        "<lista_expressoes> inválido",
        "<lista_expressoes1> inválido",
        "<comando_selecao> inválido",
        "<optional_false> inválido",
        "<statement> inválido",
        "<comando_repeticao> inválido",
        "<expressao> inválido",
        "<expressao1> inválido",
        "<elemento> inválido",
        "<relacional> inválido",
        "<relacional1> inválido",
        "<operador_relacional> inválido",
        "<aritmetica> inválido",
        "<aritmetica1> inválido",
        "<termo> inválido",
        "<termo1> inválido",
        "<fator> inválido"
    };
}
