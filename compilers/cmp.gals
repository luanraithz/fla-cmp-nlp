#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
Package = main.br.com.joyC.gaals
ScannerCaseSensitive = true
ScannerTable = Hardcode
Input = Stream
Parser = LL
#RegularDefinitions
W:[a-z]
S:[A-Z]
L:[a-zA-Z]
M:[a-zA-Z0-9]
A:(_| ({M}+_)+ | (_{M}+)+  )?
D:[0-9]
#Tokens
palavraReservada : {W} ({S}? {W})*

input = palavraReservada : "input"
isFalseDo = palavraReservada: "isFalseDo"
isTrueDo = palavraReservada: "isTrueDo"
main = palavraReservada: "main"
output = palavraReservada: "output"
true = palavraReservada: "true"
types = palavraReservada: "types"
while = palavraReservada: "while"
if = palavraReservada: "if"
false = palavraReservada: "false"


idInt: I_{L}({A}{M}+)?
idFloat: F_{L}({A}{M}+)?
idString: S_{L}({A}{M}+)?
idBool: B_{L}({A}{M}+)?
idComposto: C_{L}({A}{M}+)?

int: {D}+
float: {D}+,{D}+
string: \"[^\"\n]*\"


:! /\*(\*+[^/\*]|[^\*])*(\*)+/
:! #[^\n]*
:[\s\t\n]

"["
"]"
"("
")"
";"
":"
","
"="
"."
"&&"
"||"
"!"
"=="
"!="
"<"
"<="
">"
">="
"+"
"-"
"/"
"*"
#NonTerminals
<lang>

<opt_tipos>
<tipos>
<types_dec>
<types_dec1>
<type_dec>
<lista_de_campos>
<lista_de_campos1>
<campo>

<opt_var_decs>
<variaveis>
<variavel_dec>
<variavel_dec1>
<id_do_tipo_simples>
<var_type>
<opt_arr_size>
<id_do_tipo_composto>
<arr_types>

<lista_de_comandos>
<lista_de_comandos1>

<comando>

<atribuicao>
<identificador>
<variavel_uso>
<opt_expr>
<opt_field>

<entrada_de_dados>
<lista_de_identificadores>
<lista_de_identificadores1>

<true_statement>
<false_statement>

<saida_de_dados>
<lista_expressoes>
<lista_expressoes1>

<comando_selecao>
<optional_false>

<statement>
<comando_repeticao>


<expressao>
<expressao1> 
<elemento>
<relacional>
<relacional1>
<operador_relacional>
<aritmetica>
<aritmetica1>

<termo>
<termo1>
<fator>
#Grammar
<lang> ::= #15 #16 <opt_tipos> main "[" <opt_var_decs> <lista_de_comandos> "]" #17;

<opt_tipos> ::= î |  <tipos> ;
<tipos> ::= types "[" <types_dec> "]" ";" ;

<types_dec> ::= <type_dec> <types_dec1> ;
<types_dec1> ::= î | <type_dec> <types_dec1> ;

<type_dec> ::= idComposto ":" "[" <lista_de_campos> "]" ;
<lista_de_campos> ::= <campo><lista_de_campos1> ;
<lista_de_campos1> ::= î | "," <campo> <lista_de_campos1> ;

<campo> ::= idInt | idFloat | idString | idBool ;

<opt_var_decs> ::= î | <variaveis> ;
<variaveis> ::= ":" <variavel_dec> ";" ;
<variavel_dec> ::= <id_do_tipo_simples> <variavel_dec1> | <id_do_tipo_composto> <variavel_dec1> ;
<variavel_dec1> ::= î | "," <variavel_dec>  ;

<id_do_tipo_simples> ::= <var_type>#30 #32 <opt_arr_size> #31 ;
<var_type> ::= idInt | idFloat | idString | idBool ;
<opt_arr_size> ::= î | "[" int #36 "]" ;
<id_do_tipo_composto> ::= idComposto "[" <arr_types> "]" ; 
<arr_types> ::= idComposto | int "," idComposto ;

<lista_de_comandos> ::= <comando> ";" <lista_de_comandos1> ;
<lista_de_comandos1> ::= î | <comando> ";"  <lista_de_comandos1> ;
<comando> ::= <atribuicao> | <entrada_de_dados> | <saida_de_dados> | <comando_selecao> | <comando_repeticao> ;

<atribuicao> ::= <variavel_uso> "=" <expressao> ;
<identificador> ::= <var_type> | idComposto ;
<variavel_uso> ::= <identificador> <opt_expr> <opt_field> ;
<opt_expr> ::= î | "[" <expressao> "]" ;
<opt_field> ::= î | "." <campo> ;

<entrada_de_dados> ::= input "(" <lista_de_identificadores> ")" ;
<lista_de_identificadores> ::= <variavel_uso> <lista_de_identificadores1> ;
<lista_de_identificadores1> ::=  î  | "," <variavel_uso>  <lista_de_identificadores1> ;

<true_statement> ::= isTrueDo "[" <lista_de_comandos> "]" ;
<false_statement> ::= isFalseDo "[" <lista_de_comandos> "]" ;

<saida_de_dados> ::= output  "(" <lista_expressoes> ")" ;
<lista_expressoes> ::= <expressao> <lista_expressoes1>;
<lista_expressoes1> ::= î  | "," <expressao> <lista_expressoes1> ;

<comando_selecao> ::= if "(" <expressao> ")" <true_statement> <optional_false> ;
<optional_false> ::= î  | <false_statement> ;

<statement> ::= <true_statement> | <false_statement> ;
<comando_repeticao> ::= while "(" <expressao> ")" <statement> ;

<expressao> ::=  <elemento> <expressao1>;
<expressao1> ::= î | "&&" <elemento><expressao1>  | "||" <elemento><expressao1> ;

<elemento> ::= <relacional> | true | false | "!" <elemento> ;
<relacional> ::=  <aritmetica><relacional1> ;
<relacional1> ::= <operador_relacional> #9 <aritmetica> #10  |  î;
<operador_relacional> ::= "==" | "!=" | "<" | "<=" | ">" | ">=" ;

<aritmetica> ::= <termo> <aritmetica1>;
<aritmetica1> ::=  î | "+" <termo> #1 <aritmetica1>  | "-" <termo> #2 <aritmetica1> ;

<termo> ::= <fator> <termo1>; 
<termo1> ::=  î | "*" <fator> #3 <termo1>  | "/" <fator> #4 <termo1> ; 

<fator> ::= <variavel_uso> #33 |
		           int #5 |
		        float #6 |
                                        string #20 |
	     "(" <expressao> ")" |
	            "+" <fator> #7 |
	              "-" <fator> #8 ;





